一
	1.angular适用场景/不适用的场景
	        AngularJS主要考虑的是构建CRUD应用
	       （增加Create、查询Retrieve、更新Update、删除Delete）
	        如酷炫的特效，动画，游戏等，这种DOM操作很频繁也很复杂的应用，和CRUD应用就有很大的不同，它们不适合用AngularJS来构建
	2.angular特性：指令系统，模块系统，MVC模式，依赖注入，数据双向绑定

	3.Angular的MVC
		M-Model
		V-view
		C-controller
	4.ng-init初始化
	5.ng-bind绑定数据

	6.ng-app 无
		 有 


	7.controller 一个页面可以有很多controller，一个控制器可以被多次调用，每一次调用都会创建一个scope,每个scope上面的属性和方法都是私有的。

	8.	$scope 局部作用域 -ng-controller
		$rootScope 全局作用域 -ng-app

	9.ng-model 数据双向绑定 (MVVM)

二
	1.数据绑定有几种？
		3
		ng-bind 绑定非表单元素 优点：不会出现闪屏
		{{}} 方便快捷 缺点：会出现闪屏
		ng-model  绑定表单元素
	2.ng-cloak 解决闪屏
		.ng-cloak{
			display: none;
		}
	3.  ng-if true 显示，false-消失
			false ---惰性加载
		ng-show true 显示，false-消失
			false----display:none;

		ng-hide true 消失 false-出现
			true  ----display:none;
		注意：0false ,非0-true

	4.	ng-src
		ng-href

	5. ng-repeat ********
		$index 下标
		$first 第一个true,其他false
		$last 最后一个true,其他false
		$middle 除了第一个，最后一个，其他true
		$even 下标偶数true
		$odd 下标奇数true

		ng-repeat="(key,value) in json"

		原生js:

			for,while,do-while都可以遍历array
				while:先判断，后执行  
				do-while:先执行，后判断
				for：知道执行次数

			for-in	可以遍历json

三
	1.ng-class
		ng-class="classN"
		ng-class="{true:'red',false:'lime'}[isRed]"
		ng-class="{'red':true,'lime':true,'blue':isBlue}"
	2.ng-style
		ng-style="{}"
		json:关键字，保留字必须加""有连字符必须加"",
			//取值，关键字，保留字，变量，必须用[]*/
	3.ng-value
	4.ng-disabled
	5.ng-readonly

四
	1.ng-value--绑定的是表单经过计算的表达式
		ng-model--绑定的是一个属性
		
	2.ng-disabled="bool"
		true-禁用
		false-可用
	3.ng-readonly=“bool"
		true-只读
		false-可用

	4.ng-options="i.name as i.name group by i.type for i in job"

五
	1.请求文件如果是xml,返回的数据就是xhr.responseXML，其他文件，xhr.responseText

	2.防止有缓存，我们加_=Math.random()/new Date().getTime()

	3.XML和json
	   1.json小，省流量，速度快，用户体验度好
	   2.js解析json方便，快捷，还有方便的API
	4.xml,处理document.getElementsByTagName innerHTML innerText

	5.
	function ajaxGet(url,fn){
	   var xhr=new XMLHttpRequest();
	   xhr.open("get",url,true);
	   xhr.send();
	   xhr.onreadystatechange=function(){
	       if(xhr.readyState==4){
	          if(xhr.status==200){
		fn(xhr.responseText);
	          }else{
	                alert("error!!")
	          }
	        }
	   }
	}


	6.post 

	    var xhr=new XMLHttpRequest();
	    xhr.open("post","source/form2.php",true);
	    xhr.setRequestHeader("Content-type","application/x-www-form-urlencoded");
	    xhr.send("user="+input[0].value+"&pass="+input[1].value+"&_="+new Date().getTime());


	*****xhr.setRequestHeader("Content-type","application/x-www-form-urlencoded");


	7.get和post区别
		1）大小：get小
		2）安全：post安全
		3）性能：get好

	8.异步优点：
		省流量，速度快，用户都体验度
		
	9.jsonp
		1)创建一个script标签
		2)给script的src一个路径url
		3)插入页面

六
	过滤器
	1.作用：转换数据
	2.用法： |
	3.内置过滤器
		1.uppercase
		2.lowercase
		3.json
		4.date :'yyyy-MM-dd hh:mm:ss'
		5.number
			不传参：千分位分割
			传参：小数点后保留几位
		6.limitTo:限制数组/string的长度（+-）
		7.currency
			默认：$
			"￥"，"RMB"
		8.orderBy 排列数组
			参数：数组元素的某一个属性，默认升序，降序‘-’
			多个参数：['age','-origin']
		
		9.filter
			1.string/变量  ‘女’
			2.{“sex”:'女'}
			3.fn 参数是过滤的数组的每一项，返回true,要，返回false,不要
	自定义过滤器
	angular.module('app',[])
	.filter('myfilter',function(){
		return function(过滤的对象){
			。。。。
			return 处理后的结果
		}
	})

七
	1.服务：实例化对象，只能实例化一次，功能：提供数据和对象
	2.内置服务
		$location: absUrl()
		$timeout
		$interval
			cancel
		$http({
			url:"1.txt",
			method:"get/post"
		}).success(function(){})
		.error(function(){})

八
	1.angular.module("app",[]).directive(name,function(){
		return {
			restrict:"ECMA",
			template/templateUrl:"fdfhjj"，
			replace

		}
	})
	restrict:
	E:元素
	C:类名
	M:注释
	A:属性
	常用：EA，默认：A

	name:如果出现大写myDirective,my-directive


	template:string/fn/$templateCache
		fn(tele,tattr)
		$templateCache put/get
	templateUrl:01.html--异步加载（服务器上运行
	）
	replace:true替换
	2.scope:
		false 默认 继承不隔离
		true 继承隔离
		{}  独立scope
			独立scope三种绑定策略
			@ 单向属性绑定
			= 双向属性绑定
			& 绑定方法


























