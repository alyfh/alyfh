====================================================================
 动画:
<transition name="fade">
	<div v-show="istrue"></div>
</transition>

=================================================================
 触发动画的条件

1.使用v-show
2.使用v-if
3.动态组件
===============================================
在 vue 里面 动画分为了两大类
1.进入的动画
2.离出的动画

1.进入的动画 .fade-enter
1）动画的开始状态 .fade-enter
2)动画结束的状态 .fade-enter-to
3)动画的过渡状态 .fader-enter-active

2.离开的动画 .fade-leave
1）动画的开始状态 .fade-leave
2)动画结束的状态 .fade-leave-to
3)动画的过渡状态 .fader-leave-active
=====================================
动画库  animate.css     
下载：
打开cmd->cd .....->npm/cnpm install animate.css 

直接引入
 使用  必须要加类名 animated + 动画效果！！！
切换效果 放在transition 组件里面      需要有name 名字
=====================================

组件
1.生命周期
		beforeCreate	组件实例刚刚被创建,属性都没有
		created	实例已经创建完成，属性已经绑定
		beforeMount	模板编译之前
		mounted	模板编译之后，代替之前ready  *
		beforeUpdate	组件更新之前
		updated	组件更新完毕	*
		beforeDestroy	组件销毁前
		destroyed	组件销毁后
------------------------------------------------------
2.props

	type:
		String
		Number
		Boolean
		Function
		Object
		Array
		
------------------------------------------------------
3.组件通信:
	vm.$emit()
	vm.$on();

	父组件和子组件:

	子组件想要拿到父组件数据:
		通过  props

	不允许直接给父级的数据，做赋值操作

	问题，就想更改：
		a). 父组件每次传一个对象给子组件, 对象之间引用	√
		b). 只是不报错, mounted中转
------------------------------------------------------
可以单一事件管理组件通信:	
	var Event=new Vue();

	Event.$emit(事件名称, 数据)

	Event.$on(事件名称,function(data){
		//data
	}.bind(this));
------------------------------------------------------











